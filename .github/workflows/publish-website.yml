on:
    push:
      branches: main
    release:
        types: [published]
    workflow_dispatch: {}
      
name: demo-website

jobs:
    demo-page:
        runs-on: ubuntu-latest
        # Only restrict concurrency for non-PR jobs
        concurrency:
            group: quarto-publish-${{ github.event_name != 'pull_request' || github.run_id }}
        permissions:
            contents: read
            pages: write
            id-token: write
        steps:
        
        - name: "Check out repository"
          uses: actions/checkout@v4
          
      # Set up R environment
        - name: Set up R
          uses: r-lib/actions/setup-r@v2
          with:
            r-version: 'latest'  # You can specify a version like '4.1.0' if you need a specific version

      # Install required R packages (knitr, rmarkdown)
        - name: Install R packages
          run: |
            R -e "install.packages('knitr')"
            R -e "install.packages('rmarkdown')"

        - name: "Set up Quarto"
          uses: quarto-dev/quarto-actions/setup@v2
          with:
            version: "pre-release"

        # Render the Quarto file
        - name: "Render working directory"
          uses: quarto-dev/quarto-actions/render@v2

        # Upload a tar file that will work with GitHub Pages
        # Make sure to set a retention day to avoid running into a cap
        # This artifact shouldn't be required after deployment onto pages was a success.
        - name: Upload Pages artifact
          uses: actions/upload-pages-artifact@v2
          with: 
            retention-days: 1
            path: '_site'

        
        # Use an Action deploy to push the artifact onto GitHub Pages
        # This requires the `Action` tab being structured to allow for deployment
        # instead of using `docs/` or the `gh-pages` branch of the repository
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v2
